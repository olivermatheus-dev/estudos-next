import Head from "next/head";
import Image from "next/image";
import backgroundImage from "../../public/images/bgGreen.jpg";
import gif from "../../public/images/gif.gif";
import { useState } from "react";
import Timer from "@/components/Timer";

export default function Home() {
  const [hourSelected, setHourSelect] = useState(0);
  const [minSelect, setMinSelect] = useState(0);
  const [cycleSelected, setCycleSelected] = useState(1);
  const [selectorVisibility, setSelectorVisibility] = useState(true);
  const [timeSelected, setTimeSelected] = useState(null);
  const backgroundStyle = {
    position: "absolute",
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    zIndex: -10,
    objectFit: "cover",
  };

  const handleSetTimer = (e) => {
    e.preventDefault();
    setSelectorVisibility(false);
    const timer = {
      hourSelected: Number(hourSelected),
      minSelected: Number(minSelect),
      cycleSelected: Number(cycleSelected),
    };
    setTimeSelected(timer);
  };

  const resetTimer = () => {
    setSelectorVisibility(true);
    setHourSelect(0);
    setMinSelect(0);
  };

  return (
    <>
      <Head>
        <title>Pomodoro Timer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        src={backgroundImage}
        alt="Imagem de fundo"
        quality={100}
        style={backgroundStyle}
      />
      <main className=" flex flex-col gap-3 items-center justify-center h-screen bg-zinc-800/60">
        {selectorVisibility && (
          <>
            <h1 className="z-10 font-thin text-8xl text-zinc-200"> Timer</h1>
            <form
              onSubmit={(e) => {
                handleSetTimer(e);
              }}
              className="flex flex-col items-center gap-4"
            >
              <div className="flex gap-5">
                <div className="flex flex-col items-center gap-3">
                  <label
                    name="hour"
                    className="z-10 font-thin text-5xl text-zinc-200"
                  >
                    Hour
                  </label>
                  <input
                    type="number"
                    placeholder="Horas"
                    name="hour"
                    value={hourSelected}
                    onChange={(e) => {
                      e.preventDefault();
                      setHourSelect(e.target.value);
                    }}
                    className="bg-transparent text-zinc-200 text-2xl w-16"
                  />
                </div>
                <div className="flex flex-col items-center gap-3">
                  <label
                    name="minutes"
                    className="z-10 font-thin text-5xl text-zinc-200"
                  >
                    Minutes
                  </label>
                  <input
                    type="number"
                    placeholder="minutes"
                    name="hour"
                    value={minSelect}
                    onChange={(e) => {
                      e.preventDefault();
                      setMinSelect(e.target.value);
                    }}
                    className="bg-transparent text-zinc-200 text-2xl w-16"
                  />
                </div>
                <div className="flex flex-col items-center gap-3">
                  <label
                    name="minutes"
                    className="z-10 font-thin text-5xl text-zinc-200"
                  >
                    Cycles
                  </label>
                  <input
                    type="number"
                    placeholder="minutes"
                    name="hour"
                    value={cycleSelected}
                    onChange={(e) => {
                      e.preventDefault();
                      setCycleSelected(e.target.value);
                    }}
                    className="bg-transparent text-zinc-200 text-2xl w-16"
                  />
                </div>
              </div>
              <button
                type="submit"
                className="bg-stone-600 text-zinc-200 rounded-md px-6 py-2"
              >
                Start
              </button>
            </form>
          </>
        )}
        {!selectorVisibility && (
          <>
            <Timer resetTimer={resetTimer} timeSelected={timeSelected} />
          </>
        )}
      </main>
    </>
  );
}
